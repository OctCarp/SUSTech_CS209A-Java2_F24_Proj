<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.octcarp.sustech.cs209a.proj.apijava.mapper.TopicAnalysisMapper">

    <resultMap id="TopicAnalysisResultMap"
               type="io.github.octcarp.sustech.cs209a.proj.apijava.vo.response.basic.attached.TopicStatistics">
        <result column="total_posts" property="totalPosts"/>
        <result column="question_count" property="questionCount"/>
        <result column="answer_count" property="answerCount"/>
        <result column="comment_count" property="commentCount"/>
        <result column="user_count" property="userCount"/>
        <result column="total_views" property="totalViews"/>
        <result column="total_favorites" property="totalFavorites"/>
    </resultMap>

    <!--     generated by claude-->
    <select id="getTopicStatisticsById"
            resultType="io.github.octcarp.sustech.cs209a.proj.apijava.vo.response.basic.attached.TopicStatistics">
        WITH topic_posts AS (
            SELECT pt.post_id, pt.post_type
            FROM Post_Topics pt
                     JOIN Topics t ON pt.topic_id = t.topic_id
            WHERE t.topic_id = #{topicId}
        ),
             question_stats AS (
                 SELECT
                     COUNT(DISTINCT q.question_id) as question_count,
                     SUM(q.view_count) as total_views,
                     SUM(q.favorite_count) as total_favorites,
                     ARRAY_AGG(DISTINCT q.owner_id) FILTER (WHERE q.owner_id IS NOT NULL) as question_users
                 FROM topic_posts tp
                          JOIN Questions q ON tp.post_id = q.question_id
                 WHERE tp.post_type = 1
             ),
             answer_stats AS (
                 SELECT
                     COUNT(DISTINCT a.answer_id) as answer_count,
                     ARRAY_AGG(DISTINCT a.owner_id) FILTER (WHERE a.owner_id IS NOT NULL) as answer_users
                 FROM Questions q
                          JOIN Answers a ON q.question_id = a.question_id
                 WHERE q.question_id IN (SELECT post_id FROM topic_posts WHERE post_type = 1)
             ),
             comment_stats AS (
                 SELECT
                     COUNT(DISTINCT c.comment_id) as comment_count,
                     ARRAY_AGG(DISTINCT c.owner_id) FILTER (WHERE c.owner_id IS NOT NULL) as comment_users
                 FROM Comments c
                 WHERE c.post_id IN (
                     SELECT q.question_id
                     FROM topic_posts tp
                              JOIN Questions q ON tp.post_id = q.question_id
                     WHERE tp.post_type = 1
                     UNION
                     SELECT a.answer_id
                     FROM Questions q
                              JOIN Answers a ON q.question_id = a.question_id
                     WHERE q.question_id IN (SELECT post_id FROM topic_posts WHERE post_type = 1)
                 )
             )
        SELECT
            (SELECT question_count FROM question_stats) +
            (SELECT answer_count FROM answer_stats) +
            (SELECT comment_count FROM comment_stats) as total_posts,
            (SELECT question_count FROM question_stats) as question_count,
            (SELECT answer_count FROM answer_stats) as answer_count,
            (SELECT comment_count FROM comment_stats) as comment_count,
            (
                SELECT COUNT(DISTINCT u)
                FROM (
                         SELECT UNNEST(question_users) as u FROM question_stats
                         UNION
                         SELECT UNNEST(answer_users) as u FROM answer_stats
                         UNION
                         SELECT UNNEST(comment_users) as u FROM comment_stats
                     ) as all_users
                WHERE u IS NOT NULL
            ) as user_count,
            COALESCE((SELECT total_views FROM question_stats), 0) as total_views,
            COALESCE((SELECT total_favorites FROM question_stats), 0) as total_favorites;
    </select>


</mapper>